generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String?
  provider     String   @default("local")
  role         String   @default("member")
  lastLoginAt  DateTime?
  memberships  Membership[]
  ownedClients Client[]  @relation("ClientOwner")
  ownedProjects Project[] @relation("ProjectOwner")
  tasks        Task[]    @relation("TaskAssignee")
  auditLogs    AuditLog[] @relation("AuditActor")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Team {
  id          String       @id @default(cuid())
  name        String
  memberships Membership[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Membership {
  userId String
  teamId String
  role   String   @default("member")
  user   User     @relation(fields: [userId], references: [id])
  team   Team     @relation(fields: [teamId], references: [id])
  @@id([userId, teamId])
}

model Client {
  id           String    @id @default(cuid())
  name         String
  industry     String    @default("Other")
  status       String    @default("active")
  revenue      Float     @default(0)
  lastContact  DateTime  @default(now())
  address      String    @default("")
  website      String    @default("")
  notes        String    @default("")
  contacts     Json      @default("[]")
  followUps    Json      @default("[]")
  projectIds   Json      @default("[]")
  comments     Json      @default("[]")
  sites        Json      @default("[]")
  contracts    Json      @default("[]")
  activityLog  Json      @default("[]")
  billingTerms Json      @default("{\"paymentTerms\":\"Net 30\",\"billingFrequency\":\"Monthly\",\"currency\":\"ZAR\",\"retainerAmount\":0,\"taxExempt\":false,\"notes\":\"\"}")
  ownerId      String?
  owner        User?     @relation("ClientOwner", fields: [ownerId], references: [id])
  projects     Project[]
  invoices     Invoice[]
  opportunities Opportunity[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Project {
  id        String    @id @default(cuid())
  clientId  String
  name      String
  status    String    @default("active")
  dueDate   DateTime?
  ownerId   String?
  owner     User?     @relation("ProjectOwner", fields: [ownerId], references: [id])
  client    Client    @relation(fields: [clientId], references: [id])
  tasks     Task[]
  invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Opportunity {
  id        String   @id @default(cuid())
  clientId  String
  title     String
  stage     String   @default("prospect")
  value     Float    @default(0)
  ownerId   String?
  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invoice {
  id        String    @id @default(cuid())
  clientId  String
  projectId String?
  status    String    @default("draft")
  amount    Float
  dueDate   DateTime?
  client    Client    @relation(fields: [clientId], references: [id])
  project   Project?  @relation(fields: [projectId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Task {
  id            String    @id @default(cuid())
  projectId     String
  parentTaskId  String?
  title         String
  status        String    @default("todo")
  assigneeId    String?
  dueDate       DateTime?
  project       Project   @relation(fields: [projectId], references: [id])
  assignee      User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  parentTask    Task?     @relation("Subtasks", fields: [parentTaskId], references: [id])
  subtasks      Task[]    @relation("Subtasks")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model AuditLog {
  id        String   @id @default(cuid())
  actorId   String
  action    String
  entity    String
  entityId  String
  diff      Json?
  actor     User     @relation("AuditActor", fields: [actorId], references: [id])
  createdAt DateTime @default(now())
}

